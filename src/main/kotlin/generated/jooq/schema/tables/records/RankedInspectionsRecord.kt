/*
 * This file is generated by jOOQ.
 */
package jooq.schema.tables.records


import java.time.LocalDateTime

import jooq.schema.enums.VehicleStatus
import jooq.schema.tables.RankedInspections

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RankedInspectionsRecord() : TableRecordImpl<RankedInspectionsRecord>(RankedInspections.RANKED_INSPECTIONS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var details: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var inspectedAt: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var vehicleId: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var brigadeId: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var conclusion: VehicleStatus?
        set(value): Unit = set(5, value)
        get(): VehicleStatus? = get(5) as VehicleStatus?

    open var rn: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    /**
     * Create a detached, initialised RankedInspectionsRecord
     */
    constructor(id: Int? = null, details: String? = null, inspectedAt: LocalDateTime? = null, vehicleId: Int? = null, brigadeId: Int? = null, conclusion: VehicleStatus? = null, rn: Long? = null): this() {
        this.id = id
        this.details = details
        this.inspectedAt = inspectedAt
        this.vehicleId = vehicleId
        this.brigadeId = brigadeId
        this.conclusion = conclusion
        this.rn = rn
        resetChangedOnNotNull()
    }
}
