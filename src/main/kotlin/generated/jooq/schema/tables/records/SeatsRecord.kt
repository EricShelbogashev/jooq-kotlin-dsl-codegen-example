/*
 * This file is generated by jOOQ.
 */
package jooq.schema.tables.records


import jooq.schema.enums.SeatType
import jooq.schema.tables.Seats

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SeatsRecord() : UpdatableRecordImpl<SeatsRecord>(Seats.SEATS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var vehicleId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var identifier: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var type: SeatType?
        set(value): Unit = set(3, value)
        get(): SeatType? = get(3) as SeatType?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised SeatsRecord
     */
    constructor(id: Int? = null, vehicleId: Int? = null, identifier: String? = null, type: SeatType? = null): this() {
        this.id = id
        this.vehicleId = vehicleId
        this.identifier = identifier
        this.type = type
        resetChangedOnNotNull()
    }
}
